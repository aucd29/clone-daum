apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.clone_daum"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    // https://medium.com/@joongwon/%EC%BD%94%ED%8B%80%EB%A6%B0-kotlin-with-dagger2-11fe36126dd6
    kapt {
        generateStubs = true
        correctErrorTypes = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //
    // KOTLIN
    //

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //
    // ANDROID LIBS
    //

    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.recyclerview:recyclerview:$androidx"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"

    // dagger
    // https://google.github.io/dagger/android
    implementation "com.google.dagger:dagger:$dagger2"
    implementation "com.google.dagger:dagger-android:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2" // if you use the support libraries

    kapt "com.google.dagger:dagger-compiler:$dagger2"
    kapt "com.google.dagger:dagger-android-processor:2.16"  // 애는 버전이 낮음
    // di
    implementation "com.radutopor.viewmodelfactory:annotations:1.0.0"
    kapt "com.radutopor.viewmodelfactory:processor:1.0.0"   // use `annotationProcessor` for Java

    // material
    implementation "com.google.android.material:material:$androidx"

    //
    // OPEN LIBS
    //

    implementation "org.slf4j:slf4j-api:$slf4j"
    implementation "com.github.tony19:logback-android:$logback"

    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

//    implementation "com.squareup.picasso:picasso:$picasso"

    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'

    // chip layout
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'

    // local lib

    implementation project(path: ':common')
    implementation project(path: ':dingbat')
}

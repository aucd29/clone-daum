apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion compile_sdk
    defaultConfig {
        applicationId "com.example.clone_daum"
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    
    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'

        exclude 'META-INF/kotlinx-io.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    // https://medium.com/@joongwon/%EC%BD%94%ED%8B%80%EB%A6%B0-kotlin-with-dagger2-11fe36126dd6
    kapt {
        generateStubs = true
        correctErrorTypes = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation "com.github.gmazzo:okhttp-mock:1.3.1"

    //
    // KOTLIN
    //

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //
    // ANDROID LIBS
    //

    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    implementation "com.google.android.material:material:$material"

    implementation "androidx.recyclerview:recyclerview:$androidx"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"

    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"

    // dagger : https://google.github.io/dagger/android
    implementation "com.google.dagger:dagger:$dagger2"
    implementation "com.google.dagger:dagger-android:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2" // if you use the support libraries
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    kapt "com.google.dagger:dagger-android-processor:2.16"  // 애는 버전이 낮음


    //
    // OPEN LIBS
    //

    implementation "org.slf4j:slf4j-api:$slf4j"
    implementation "com.github.tony19:logback-android:$logback"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson"

    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'

    // chip layout
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'

    // rxlocation : https://github.com/patloew/RxLocation
    implementation 'com.patloew.rxlocation:rxlocation:1.0.5'
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    // https://github.com/lopspower/CircularProgressBar
    implementation 'com.mikhaellopez:circularprogressbar:2.0.0'

    // https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:2.8.0'

    // KAKAO
    implementation 'com.kakao.sdk:newtone:6.0.1'

    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.zxing:core:3.3.2'

    // firebase
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // tensorflow
//    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-android:1.2.0'

    // local lib
    implementation project(path: ':brigitte')
    implementation project(path: ':dingbat')
}

// fabric 이 편한대 굳이 구글이 인수를 해버려서 =_ = 귀찮게 시리..
apply plugin: 'com.google.gms.google-services'